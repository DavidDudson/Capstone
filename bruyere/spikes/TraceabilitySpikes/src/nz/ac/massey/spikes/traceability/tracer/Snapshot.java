package nz.ac.massey.spikes.traceability.tracer;

import java.util.ArrayList;
import java.util.List;

import nz.ac.massey.spikes.traceability.tracer.helper.JSONEncoder;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
/**
 * @author Li Sui
 * snapshot of list of variables
 */
public class Snapshot {
	
	private int lineNumber;
	/**
	 * list of Json representation of this snapshot
	 */
	private List<String> variablesList = new ArrayList<String>();
	
	/**
	 * set line number for this trace
	 * 
	 */
	public void setLineNumber(final int lineNumber){
		this.lineNumber=lineNumber;
	}
	/**
	 * Get the line number for this trace.
	 * @return
	 */
	public int getLineNumber() {
		return this.lineNumber;
	}
	
	/**
	 * Get the size of the snapshot (the number of variables)
	 * @return
	 */
	public int size() {
		return variablesList.size();
	}
	
	/**
	 * Get stored value for a variable.
	 * @return a string representation of the object, generated by an encoder
	 */
	public String getValue(String varName) {
		JsonParser parser = new JsonParser();
		 String output="";
		for(String element : variablesList){
			JsonObject  o = (JsonObject)parser.parse(element);
			if(o.get("var").getAsString().equals(varName)){
				output= o.get("value").toString();
			}
		}
		return output;
		
	}
	
	/**
	 * Get a collection of all variables names registered.
	 * @return
	 */
	public List<String> getVariableNames() {
		return variablesList;
	}
	
	/**
	 * This method is used to stringified/serialized  snapshot
	 * 
	 */
	public String getJson(){
		StringBuilder snapshotJson= new StringBuilder();
		snapshotJson.append("{"+"\"line: "+this.lineNumber+"\":[");
		for(int i =0 ; i<variablesList.size();i++){
			if(i ==variablesList.size() -1 ){
				snapshotJson.append(variablesList.get(i));
			}else{
				snapshotJson.append(variablesList.get(i)+",");
			}
		}		
		snapshotJson.append("]}");
		return snapshotJson.toString();
	}

	/**
	 * This is the methods used by the tracer to add a new variable to an already existing snapshot
	 * @param varName the name of the variable
	 * @param varValue the value - IMPORTANT: this has already been stringified/serialized by an encoder in order to FREEZE it
	 */
	public void registerVariable(String varName,Object varValue) {
		String json ="{\"var\":\""+varName+"\",\"value\":"+new JSONEncoder().stringify (varValue)+",\"class\":\""+varValue.getClass().getTypeName()+"\"}";
		variablesList.add(json);
	}	
}
