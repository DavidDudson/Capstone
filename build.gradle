//-------Helper Functions---------//

//get version string from git details
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

apply plugin: 'java'
apply plugin: 'war'

//-------Dependencies---------//

//Define repository
allprojects{

  //Define name of project etc.
  version = getVersionName()

  //Apply code coverage
  apply plugin: "jacoco"

  jacoco {
      toolVersion = "0.7.1.201405082137"
      reportsDir = file("$buildDir/ReportDir")
  }

  repositories {
      // Main repository for gathering plugins
      jcenter()
  }
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

//Apply server plugin
apply plugin: 'org.akhikhl.gretty'

repositories{
  // Treat SoGaCo build output as a repository
  flatDir {
     dirs 'build/sogacoSrc/bruyere/build/target/projects/'
  }
}


dependencies {

    //Make this project depends on other Projects
    compile project(':games.battleships')

    //SoGaCo Dependencies
    compile name: 'gamecore-0.0.3-SNAPSHOT'
    compile name: 'services-0.0.3-SNAPSHOT'
    compile name: 'languages.java-0.0.3-SNAPSHOT'

    //Logging
    compile 'org.slf4j:slf4j-api:1.7.7'

    compile 'org.apache.derby:derby:10.11.1.1'

    //Testing
    testCompile "junit:junit:4.11"
}

//-------Configuration---------//

//Configure Server plugin
gretty{
  servletContainer = 'jetty9'
  //AutoReload of everything
  managedClassReload = true
  fastReload = true
}

war {
  destinationDir = file('./target')
  //Copy Generated Javadocs
  from('./build/docs/javadoc') {
      include '**/*'
      into 'javadoc'
  }
  //Copy Generated Reports
  from('./build/reports/tests/') {
      include '**/*'
      into 'reports'
  }

  baseName = 'SoGaCo-Web-Battleships'
  version = getVersionName()
}

buildDir = './build/'


//--------Tasks---------//

// Clones the SoGaCo Repository, uses your bitbucket Username and Password
// Debug information to get a feel for whats happening.
task cloneSogaco( type: Exec ) {
  mkdir './build/sogacoSrc'
  commandLine 'hg clone https://CapstoneGroup1:Capstone@bitbucket.org/DavidDudson/bruyere'.split()
  workingDir = './build/sogacoSrc'
}

// Clone only when SoGaCo isnt in the build folder
cloneSogaco.onlyIf { !file('./build/sogacoSrc/bruyere/').exists() }

//Build SoGaCo from source
task buildSogaco( type: Exec  , dependsOn: 'cloneSogaco' ) {
    commandLine 'mvn clean install'.split()
    workingDir = './build/sogacoSrc/bruyere/build/'
}

// Build only when SoGaCo hasn't been built before
buildSogaco.onlyIf { !file('./build/sogacoSrc/bruyere/build/target/projects/').exists()}

//Copy cloned SoGaCo to out target Directory
task copySogaco( type: Copy , dependsOn: 'buildSogaco' ) {
  from './build/sogacoSrc/bruyere/build/target/projects'
  into './target'
  include '**/*.war'
}

//Cleans the target directory
task cleanTargetDir(type: Delete) {
  delete fileTree(dir: "target")
}

task cleanBuildDir(type:Delete) {
  delete fileTree(dir:"build", exclude: "sogacoSrc")
}

copySogaco.mustRunAfter('cleanTargetDir')

//Build All Code and output to target Dir
task buildAll( type: GradleBuild ,dependsOn: ['copySogaco','cleanTargetDir','cleanBuildDir']){
  tasks = ['build']
}

//Copy temperary war's into the Gretty Server dir
task herokuDependencies(type: Copy){
  from './heroku-libs/'
  into './target'
  include '**/*.war'
}

task runDevServer(type: GradleBuild,dependsOn: ['buildAll']){
  tasks = ['appStart']
}

//What heroku uses to deploy
task stage(type: GradleBuild ,dependsOn: ['herokuDependencies']){
    tasks = ['build']
}
