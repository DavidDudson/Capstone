//get version string from git details
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

//Define name of project etc.
version = getVersionName()


//Define repository
allprojects{
  repositories {
      // Main repository for gathering plugins
      jcenter()
  }
}

//Define buildscript dependencies
buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

//Apply server plugin
apply plugin: 'org.akhikhl.gretty'

//Apply code coverage
apply plugin: "jacoco"

//Configure Server plugin
gretty{
  servletContainer = 'jetty9'
  //AutoReload of everything
  managedClassReload = true
  fastReload = true
  scanDirs = './SoGaCo-Web-Battleships/src/main/webapp/'
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/ReportDir")
}

//Define all Wars to be loaded by server, requires updateSogaco task to be run at some point before use.
farm {
  webapp './target/SoGaCo-Logging-0.0.3-SNAPSHOT.war'
  webapp './target/SoGaCo-Web-Home-0.0.3-SNAPSHOT.war'
  webapp './target/SoGaCo-Web-Mancala-0.0.3-SNAPSHOT.war'
  webapp './target/SoGaCo-Web-Othello-0.0.3-SNAPSHOT.war'
  webapp './target/SoGaCo-Web-Primegame-0.0.3-SNAPSHOT.war'
  webapp './target/SoGaCo-Web-Resources-0.0.3-SNAPSHOT.war'
  webapp './target/SoGaCo-Web-Battleships-' + getVersionName() + '.war'
}

//--------Tasks---------//

// Clones the SoGaCo Repository, uses your bitbucket Username and Password
// Debug information to get a feel for whats happening.
task cloneSogaco( type: Exec ) {
  mkdir './build/sogacoSrc'
  commandLine 'hg clone https://CapstoneGroup1:Capstone@bitbucket.org/DavidDudson/bruyere'.split()
  workingDir = './build/sogacoSrc'
}

// Clone only when SoGaCo isnt in the build folder
cloneSogaco.onlyIf { !file('./build/sogacoSrc/bruyere/').exists() }

//Build SoGaCo from source
task buildSogaco( type: Exec  , dependsOn: 'cloneSogaco' ) {
    commandLine 'mvn clean install'.split()
    workingDir = './build/sogacoSrc/bruyere/build/'
}

// Build only when SoGaCo hasn't been built before
buildSogaco.onlyIf { !file('./build/sogacoSrc/bruyere/build/target/projects/').exists()}

//Copy cloned SoGaCo to out target Directory
task copySogaco( type: Copy , dependsOn: 'buildSogaco' ) {
  from './build/sogacoSrc/bruyere/build/target/projects'
  into './target'
  include '**/*.war'
}

//Cleans the target directory
task cleanTargetDir(type: Delete) {
  delete fileTree(dir: "target")
}

copySogaco.mustRunAfter('cleanTargetDir')

//Build All Code and output to target Dir
task buildAll( type: GradleBuild ,dependsOn: ['copySogaco','cleanTargetDir']){
  tasks = ['build']
}

//Copy temperary war's into the Gretty Server dir
task herokuDependencies(type: Copy){
  from './heroku-libs/'
  into './target'
  include '**/*.war'
}

//Run the developement server on localhost with Gretty
task runDevServer( dependsOn: ['buildAll','farmRun'])

//What heroku uses to deploy
task stage(type: GradleBuild ,dependsOn: ['herokuDependencies']){
    tasks = ['build']
}
