//-------Helper Functions---------//
apply plugin: 'java'
apply plugin: 'war'

//-------Dependencies---------//

//Define repository
allprojects {

    //Define name of project etc.
    version = 0.1

    //Apply code coverage
    apply plugin: "jacoco"

    repositories {
        // Main repository for gathering plugins
        jcenter()
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

//Apply server plugin
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'project-reports'

repositories {
    // Treat SoGaCo build output as a repository
    flatDir {
        dirs './libs'
    }
}


dependencies {

    //SoGaCo Dependencies
    compile 'org.apache.logging.log4j:log4j-core:2.3'
    compile 'javax.persistence:persistence-api:1.0.2'
    compile 'org.apache.shiro:shiro-all:1.2.4'
    compile 'commons-configuration:commons-configuration:1.10'
    compile 'org.eclipse.persistence:eclipselink:2.6.1-RC1'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'org.apache.derby:derby:10.11.1.1'
    compile 'org.glassfish.jersey.core:jersey-client:2.20'
    compile 'org.json:json:20141113'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.apache.httpcomponents:httpclient:4.5'

    compile 'joda-time:joda-time:2.8.1'

    compile name: 'services-0.0.3-SNAPSHOT'
    //Make this project depends on the game
    compile project(':games.battleships')

    //Testing
    testCompile "junit:junit:4.11"
}

//-------Configuration---------//

//Configure Server plugin
gretty {
    servletContainer = 'tomcat8'
    //AutoReload of everything
    managedClassReload = true
    fastReload = true
    scanInterval = 0.5

}

war {

    baseName = 'starbattle'
    version = 0.1
    destinationDir = file('./target')
}

buildDir = './build/'

//--------Tasks---------//

// Clones the SoGaCo Repository, uses your bitbucket Username and Password
// Debug information to get a feel for whats happening.
task cloneSogaco(type: Exec) {
    mkdir './sogacoSrc'
    commandLine 'hg clone https://CapstoneGroup1:Capstone@bitbucket.org/DavidDudson/bruyere'.split()
    workingDir = './sogacoSrc'
}

// Clone only when SoGaCo isnt in the build folder
cloneSogaco.onlyIf { !file('./sogacoSrc/bruyere/').exists() }

//Build SoGaCo from source
task buildSogaco(type: Exec, dependsOn: 'cloneSogaco') {
    commandLine 'mvn clean install'.split()
    workingDir = './sogacoSrc/bruyere/build/'
}

// Build only when SoGaCo hasn't been built before
buildSogaco.onlyIf { !file('./sogacoSrc/bruyere/build/target/projects/').exists() }

//Copy cloned SoGaCo to out target Directory
task copySogaco(type: Copy, dependsOn: 'buildSogaco') {
    from './sogacoSrc/bruyere/build/target/projects'
    into './target'
    include '**/*.jar'
}

//Cleans the target directory
task cleanTargetDir(type: Delete) {
    delete "target"
}

task cleanBuildDir(type: Delete) {
    delete "build"
}

copySogaco.mustRunAfter('cleanTargetDir')
copySogaco.mustRunAfter('cleanBuildDir')

//Build All Code and output to target Dir
task buildAll(type: GradleBuild, dependsOn: ['cleanTargetDir', 'cleanBuildDir']) {
    tasks = ['build']
}

task copyServices(type:Copy,dependsOn: 'buildServices'){
    from './sogacoSrc/bruyere/build/target/projects'
    into './libs'
    include 'services-0.0.3-SNAPSHOT.jar'
}

task buildDebug(type: GradleBuild, dependsOn: 'copyServices') {
    tasks = ['build']
}

task runDevServer(type: GradleBuild, dependsOn: ['buildAll']) {
    tasks = ['jettyRun']
}

//Build SoGaCo from source
task buildServices(type: Exec, dependsOn: 'cloneSogaco') {
    commandLine 'mvn clean install'.split()
    workingDir = './sogacoSrc/bruyere/services/'
}

task runDebugServer(type: GradleBuild, dependsOn:'buildDebug'){
    tasks = ['jettyRun']
}

task buildAndDeploy(type: Exec,dependsOn:'buildDebug'){
    commandLine 'heroku deploy:war --war target/starbattle-0.1.war --app battleships-capstone'.split()
}

task buildAndDeployDebug(type: Exec,dependsOn:'buildAll'){
    commandLine 'heroku deploy:war --war target/starbattle-0.1.war --app battleships-capstone'.split()
}


task stage {
    dependsOn buildAll
}
